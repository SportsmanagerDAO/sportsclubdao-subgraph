enum ProposalType {
  MINT
  BURN
  CALL
  VPERIOD
  GPERIOD
  QUORUM
  SUPERMAJORITY
  TYPE
  PAUSE
  EXTENSION
  ESCAPE
  DOCS
}

enum VoteType {
  SIMPLE_MAJORITY
  SIMPLE_MAJORITY_QUORUM_REQUIRED
  SUPERMAJORITY
  SUPERMAJORITY_QUORUM_REQUIRED
}

type DAO @entity {
  id: ID!
  address: Bytes!
  birth: BigInt!
  founder: Bytes!
  token: Token! @derivedFrom(field: "dao")
  treasury: Treasury! @derivedFrom(field: "dao")
  docs: String!
  votingPeriod: BigInt!
  gracePeriod: BigInt!
  members: [Member!]! @derivedFrom(field: "dao")
  proposals: [Proposal!] @derivedFrom(field: "dao")
  extensions: [Bytes!]
  quorum: BigInt!
  supermajority: BigInt!
  crowdsale: Crowdsale @derivedFrom(field: "dao")
  redemption: Redemption @derivedFrom(field: "dao")
  tribute: Tribute @derivedFrom(field: "dao")
}

type Treasury @entity {
  id: ID!
  dao: DAO!
  token: [Token!] @derivedFrom(field: "treasury")
  balance: BigInt
}

type Token @entity {
  id: ID!
  dao: DAO!
  name: String
  symbol: String
  totalSupply: BigInt
  paused: Boolean
  treasury: Treasury
}

type Member @entity {
  id: ID!
  address: Bytes!
  dao: DAO!
  shares: BigInt!
  delegate: Delegate
  proposals: [Proposal!]
  spender: Bytes
  approval: Boolean
  amountApproved: BigInt
}

type Delegate @entity {
  id: ID!
  dao: DAO!
  balance: BigInt!
  delegatee: [Member!] @derivedFrom(field: "delegate")
}

type Proposal @entity {
  id: ID!
  dao: DAO!
  proposer: Bytes!
  proposalType: ProposalType
  description: String!
  sponsor: Bytes
  sponsored: Boolean
  status: Boolean
  votes: [Vote!] @derivedFrom(field: "proposal")
  creationTime: BigInt!
}

type Vote @entity {
  id: ID!
  dao: DAO!
  proposal: Proposal!
  voter: Bytes
  vote: Boolean
}

type Crowdsale @entity {
  id: ID!
  dao: DAO!
  active: Boolean!
  listId: BigInt
  purchaseToken: Bytes
  purchaseMultiplier: Int
  purchaseLimit: BigInt
  saleEnds: BigInt
  details: String
  purchase: [Purchase!] @derivedFrom(field: "crowdsale")
  amountPurchased: BigInt!
}

type Purchase @entity {
  id: ID!
  crowdsale: Crowdsale!
  purchaser: Bytes!
  purchased: BigInt!
}

type Redemption @entity {
  id: ID!
  dao: DAO!
  active: Boolean!
  starts: BigInt!
  redeemables: [Bytes!]
  quit: [Quit!] @derivedFrom(field: "redemption")
}

type Quit @entity {
  id: ID!
  redemption: Redemption!
  member: Member!
  amount: BigInt!
}

type Tribute @entity {
  id: ID!
  dao: DAO!
  active: Boolean!
  proposal: [TributeProposal!] @derivedFrom(field: "tribute")
}

type TributeProposal @entity {
  id: ID!
  tribute: Tribute
  proposer: Bytes!
  asset: Bytes!
  isNFT: Boolean!
  value: BigInt!
  status: String
  token: Token
}
